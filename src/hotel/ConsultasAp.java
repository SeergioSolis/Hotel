/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author xjlop
 */
public class ConsultasAp extends javax.swing.JFrame {

    /**
     * Creates new form ConsultasAp
     */
    Conexion cc = new Conexion();
    Connection cn = cc.conexion();
    Statement st;
    ResultSet rs;
    //PreparedStatement ps;
    public ConsultasAp() {
        initComponents();
        String[] datos = new String[2];
        this.setSize(700, 500);
        this.setLocationRelativeTo(null);
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Numero de Habitacion");
        Tabla.setModel(modelo);
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT Nombre,NumH FROM customers ORDER BY Nombre ASC");
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                modelo.addRow(datos);
            }
        }catch(SQLException e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        NumH = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        Piso = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        Nombre = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton10.setText("Mostrar Recepcionistas");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 370, -1));

        jButton9.setText("Regresar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, -1, -1));

        jButton8.setText("Buscar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 400, -1));
        getContentPane().add(NumH, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 350, -1));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, 160));

        Piso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        getContentPane().add(Piso, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 110, -1));

        jButton7.setText("Buscar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 160, -1));
        getContentPane().add(Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 350, -1));

        jButton6.setText("Buscar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 160, -1));

        jButton5.setText("Imprimir costos de habitaciones");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 530, -1));

        jButton4.setText("Cupo del hotel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 530, -1));

        jButton3.setText("Grafica Porcentajes por tipo de habitacion");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 530, -1));

        jButton1.setText("Ingresos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 150, -1));

        jButton2.setText("Grafica Cupo por tipo de habitacion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 530, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT dineros FROM info");
            while(rs.next()){
                JOptionPane.showMessageDialog(null, "Ingresos generados hasta el momento : "+rs.getInt(1));
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "ERROR 502 BAD GATEWAY");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int desocupadas = 0, ocupadas = 0, totales = 0;
        float[] porc = new float[2];
        String [] nombres = new String[] {"Desocupado","Ocupado"};
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM Habitacion WHERE Thab = 1 && Cupo = 1");
            while(rs.next()){
                ocupadas = rs.getInt(1);
            }
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM habitacion WHERE Thab = 1 && Cupo = 0");
            while(rs.next()){
                desocupadas = rs.getInt(1);
            }
            //SELECT COUNT(*) FROM habitacion WHERE Thab = 1 && Cupo = 0;
            totales = ocupadas + desocupadas;
            porc[0] = desocupadas;
            porc[1] = ocupadas;
            DefaultPieDataset pieDataset = new DefaultPieDataset();
            for (int i = 0; i < porc.length; i++) {
                pieDataset.setValue( nombres[i],porc[i]);
            }
            JFreeChart chart = ChartFactory.createPieChart("Cupo de Habitaciones Tipo 1",pieDataset,true,true,true);
            PiePlot P = (PiePlot)chart.getPlot();
            ChartFrame frame = new ChartFrame ("Cupo de Habitaciones Tipo 1", chart);
            frame.setVisible(true);
            frame.setSize(450,500);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "ErrorXD");
        }
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM Habitacion WHERE Thab = 2 && Cupo = 1");
            while(rs.next()){
                ocupadas = rs.getInt(1);
            }
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM habitacion WHERE Thab = 2 && Cupo = 0");
            while(rs.next()){
                desocupadas = rs.getInt(1);
            }
            //SELECT COUNT(*) FROM habitacion WHERE Thab = 1 && Cupo = 0;
            totales = ocupadas + desocupadas;
            porc[0] = desocupadas;
            porc[1] = ocupadas;
            DefaultPieDataset pieDataset = new DefaultPieDataset();
            for (int i = 0; i < porc.length; i++) {
                pieDataset.setValue( nombres[i],porc[i]);
            }
            JFreeChart chart = ChartFactory.createPieChart("Cupo de Habitaciones Tipo 2",pieDataset,true,true,true);
            PiePlot P = (PiePlot)chart.getPlot();
            ChartFrame frame = new ChartFrame ("Cupo de Habitaciones Tipo 2", chart);
            frame.setVisible(true);
            frame.setSize(450,500);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "ErrorXD");
        }
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM Habitacion WHERE Thab = 3 && Cupo = 1");
            while(rs.next()){
                ocupadas = rs.getInt(1);
            }
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM habitacion WHERE Thab = 3 && Cupo = 0");
            while(rs.next()){
                desocupadas = rs.getInt(1);
            }
            //SELECT COUNT(*) FROM habitacion WHERE Thab = 1 && Cupo = 0;
            totales = ocupadas + desocupadas;
            porc[0] = desocupadas;
            porc[1] = ocupadas;
            DefaultPieDataset pieDataset = new DefaultPieDataset();
            for (int i = 0; i < porc.length; i++) {
                pieDataset.setValue( nombres[i],porc[i]);
            }
            JFreeChart chart = ChartFactory.createPieChart("Cupo de Habitaciones Tipo 3",pieDataset,true,true,true);
            PiePlot P = (PiePlot)chart.getPlot();
            ChartFrame frame = new ChartFrame ("Cupo de Habitaciones Tipo 3", chart);
            frame.setVisible(true);
            frame.setSize(450,500);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "ErrorXD");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        float[] porc = new float[3];
        String [] nombres = new String[] {"Sencilla","Doble","Triple"};
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM Habitacion WHERE Thab = 1");
            while(rs.next()){
                porc[0] = rs.getInt(1);
            }
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM habitacion WHERE Thab = 2");
            while(rs.next()){
                porc[1] = rs.getInt(1);
            }
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM habitacion WHERE Thab = 3");
            while(rs.next()){
                porc[2] = rs.getInt(1);
            }
            JOptionPane.showMessageDialog(null, "Sencillas : " + porc[0] + " Dobles : " + porc[1] + " Triples : " + porc[2]);
            //SELECT COUNT(*) FROM habitacion WHERE Thab = 1 && Cupo = 0;
            DefaultPieDataset pieDataset = new DefaultPieDataset();
            for (int i = 0; i < porc.length; i++) {
                pieDataset.setValue( nombres[i],porc[i]);
            }
            JFreeChart chart = ChartFactory.createPieChart("Tipos de habitacion",pieDataset,true,true,true);
            PiePlot P = (PiePlot)chart.getPlot();
            ChartFrame frame = new ChartFrame ("Tipos de habitacion", chart);
            frame.setVisible(true);
            frame.setSize(450,500);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "ErrorXD");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int [] datos = new int[2];
        String [] estado = new String[]{"Ocupada","Desocupada"};
        int i = 0;
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT COUNT(*) FROM habitacion WHERE Cupo = 0 UNION SELECT COUNT(*) FROM habitacion WHERE Cupo = 1");
            while(rs.next()){
                datos[i] = rs.getInt(1);
                i++;
            }
            JOptionPane.showMessageDialog(null, "Porcentaje de ocupacion : " + (((double)datos[1]/(double)(datos[0]+(double)datos[1]))*100));
            DefaultPieDataset pieDataset = new DefaultPieDataset();
            for (int a = 0; a < datos.length; a++) {
                pieDataset.setValue( estado[a],datos[a]);
            }
            JFreeChart chart = ChartFactory.createPieChart("Tipos de habitacion",pieDataset,true,true,true);
            PiePlot P = (PiePlot)chart.getPlot();
            ChartFrame frame = new ChartFrame ("Tipos de habitacion", chart);
            frame.setVisible(true);
            frame.setSize(450,500);
        }
        catch(SQLException e){
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int [] datos = new int[3];
        int i = 0;
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT Precio FROM tipohab");
            while(rs.next()){
                datos[i] = rs.getInt(1);
                i++;
            } 
            JOptionPane.showMessageDialog(null, "Sencilla : "+datos[0] + " Doble : "+ datos[1] + " Triple : "+datos[2]);
        }catch(SQLException e){
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String name = Nombre.getText();
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT customers.NumH,habitacion.Piso FROM customers INNER JOIN habitacion ON customers.NumH = habitacion.NumH WHERE customers.Nombre = '"+name+"'");
            while(rs.next()){
                JOptionPane.showMessageDialog(null, name + " Habitacion : " + rs.getInt(1) + " Piso : "+ rs.getInt(2));
            }
        }catch(SQLException e){
            
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String numh = NumH.getText();
        String Nombre = "";
        String Cupo = "";
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT customers.Nombre,habitacion.Cupo From customers INNER JOIN habitacion ON customers.NumH = habitacion.NumH WHERE habitacion.NumH = "+numh);
            while(rs.next()){
                Nombre = rs.getString(1);
                Cupo = rs.getString(2);
            }
            System.out.println(Cupo);
            if(Cupo.equals("")){
                JOptionPane.showMessageDialog(null, "Habitacion Disponible");
            }else{
                JOptionPane.showMessageDialog(null, "En la habitacion : " + numh + " Esta : " + Nombre );
            }
        }catch(SQLException e){
            
        }        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        ArrayList<HAB> cosa = new ArrayList();
        String piso = (String)Piso.getSelectedItem();
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT NumH,THab FROM habitacion WHERE Cupo = 0 && Piso = "+piso);
            while(rs.next()){
                cosa.add(new HAB(rs.getInt(1),rs.getInt(2)));
            }
            String Sencilla="Sencilla : ", Doble="Doble : ", Triple="Triple : ";
            for(HAB h : cosa){
                if(h.getTHABENT() == 1){
                    Sencilla += " " + h.getNUMHAB() + " ";
                }
                if(h.getTHABENT() == 2){
                    Doble += " " + h.getNUMHAB() + " ";
                }
                if(h.getTHABENT() == 3){
                    Triple += " " + h.getNUMHAB() + " ";
                }
            }
            JOptionPane.showMessageDialog(null, Sencilla + "\n" + Doble + "\n" + Triple);
        }catch(SQLException e){
            
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        UI ui = new UI();
        this.setVisible(false);
        ui.setVisible(true);
        ui.setResizable(false);
        ui.setLocationRelativeTo(null);        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String usuarios = "";
        try{
            st = cn.createStatement();
            rs = st.executeQuery("SELECT Usr FROM credenciales WHERE Usr!='root'");
            while(rs.next()){
                usuarios += rs.getString(1) + " ";
            }
            JOptionPane.showMessageDialog(null, "Recepcionistas : "+usuarios);
        }catch(SQLException e){
            
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultasAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultasAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultasAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultasAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultasAp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Nombre;
    private javax.swing.JTextField NumH;
    private javax.swing.JComboBox<String> Piso;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
